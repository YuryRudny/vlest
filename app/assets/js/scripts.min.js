!function(root, factory) {
    "function" == typeof define && define.amd ? // AMD. Register as an anonymous module unless amdModuleId is set
    define([], function() {
        return root.svg4everybody = factory();
    }) : "object" == typeof module && module.exports ? // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory() : root.svg4everybody = factory();
}(this, function() {
    /*! svg4everybody v2.1.9 | github.com/jonathantneal/svg4everybody */
    function embed(parent, svg, target) {
        // if the target exists
        if (target) {
            // create a document fragment to hold the contents of the target
            var fragment = document.createDocumentFragment(), viewBox = !svg.hasAttribute("viewBox") && target.getAttribute("viewBox");
            // conditionally set the viewBox on the svg
            viewBox && svg.setAttribute("viewBox", viewBox);
            // copy the contents of the clone into the fragment
            for (// clone the target
            var clone = target.cloneNode(!0); clone.childNodes.length; ) {
                fragment.appendChild(clone.firstChild);
            }
            // append the fragment into the svg
            parent.appendChild(fragment);
        }
    }
    function loadreadystatechange(xhr) {
        // listen to changes in the request
        xhr.onreadystatechange = function() {
            // if the request is ready
            if (4 === xhr.readyState) {
                // get the cached html document
                var cachedDocument = xhr._cachedDocument;
                // ensure the cached html document based on the xhr response
                cachedDocument || (cachedDocument = xhr._cachedDocument = document.implementation.createHTMLDocument(""), 
                cachedDocument.body.innerHTML = xhr.responseText, xhr._cachedTarget = {}), // clear the xhr embeds list and embed each item
                xhr._embeds.splice(0).map(function(item) {
                    // get the cached target
                    var target = xhr._cachedTarget[item.id];
                    // ensure the cached target
                    target || (target = xhr._cachedTarget[item.id] = cachedDocument.getElementById(item.id)), 
                    // embed the target into the svg
                    embed(item.parent, item.svg, target);
                });
            }
        }, // test the ready state change immediately
        xhr.onreadystatechange();
    }
    function svg4everybody(rawopts) {
        function oninterval() {
            // while the index exists in the live <use> collection
            for (// get the cached <use> index
            var index = 0; index < uses.length; ) {
                // get the current <use>
                var use = uses[index], parent = use.parentNode, svg = getSVGAncestor(parent), src = use.getAttribute("xlink:href") || use.getAttribute("href");
                if (!src && opts.attributeName && (src = use.getAttribute(opts.attributeName)), 
                svg && src) {
                    if (polyfill) {
                        if (!opts.validate || opts.validate(src, svg, use)) {
                            // remove the <use> element
                            parent.removeChild(use);
                            // parse the src and get the url and id
                            var srcSplit = src.split("#"), url = srcSplit.shift(), id = srcSplit.join("#");
                            // if the link is external
                            if (url.length) {
                                // get the cached xhr request
                                var xhr = requests[url];
                                // ensure the xhr request exists
                                xhr || (xhr = requests[url] = new XMLHttpRequest(), xhr.open("GET", url), xhr.send(), 
                                xhr._embeds = []), // add the svg and id as an item to the xhr embeds list
                                xhr._embeds.push({
                                    parent: parent,
                                    svg: svg,
                                    id: id
                                }), // prepare the xhr ready state change event
                                loadreadystatechange(xhr);
                            } else {
                                // embed the local id into the svg
                                embed(parent, svg, document.getElementById(id));
                            }
                        } else {
                            // increase the index when the previous value was not "valid"
                            ++index, ++numberOfSvgUseElementsToBypass;
                        }
                    }
                } else {
                    // increase the index when the previous value was not "valid"
                    ++index;
                }
            }
            // continue the interval
            (!uses.length || uses.length - numberOfSvgUseElementsToBypass > 0) && requestAnimationFrame(oninterval, 67);
        }
        var polyfill, opts = Object(rawopts), newerIEUA = /\bTrident\/[567]\b|\bMSIE (?:9|10)\.0\b/, webkitUA = /\bAppleWebKit\/(\d+)\b/, olderEdgeUA = /\bEdge\/12\.(\d+)\b/, edgeUA = /\bEdge\/.(\d+)\b/, inIframe = window.top !== window.self;
        polyfill = "polyfill" in opts ? opts.polyfill : newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537 || edgeUA.test(navigator.userAgent) && inIframe;
        // create xhr requests object
        var requests = {}, requestAnimationFrame = window.requestAnimationFrame || setTimeout, uses = document.getElementsByTagName("use"), numberOfSvgUseElementsToBypass = 0;
        // conditionally start the interval if the polyfill is active
        polyfill && oninterval();
    }
    function getSVGAncestor(node) {
        for (var svg = node; "svg" !== svg.nodeName.toLowerCase() && (svg = svg.parentNode); ) {}
        return svg;
    }
    return svg4everybody;
});
// Lazy loading img & background images using intersection observer
// Reference: https://developers.google.com/web/fundamentals/performance/lazy-loading-guidance/images-and-video/
// Using example: <img class="lazy" src="thumb.gif" data-src="real-img.jpg" data-srcset="real-img@1x.jpg 1x, real-img@2x.jpg 2x">
// Background image class usign example: <div class="lazy-background"> with added class ".visible" for styling
// Background image style attribute lazy loading example: <div data-bg="image.jpg">

// delete window.IntersectionObserver; // Fallback Testing

document.addEventListener('DOMContentLoaded', function() {

	var lazyImages = [].slice.call(document.querySelectorAll('img.lazy'));
	var lazyBackgrounds = [].slice.call(document.querySelectorAll('.lazy-background'));
	var lazyBackgroundsData = [].slice.call(document.querySelectorAll('[data-bg]'));

	if ('IntersectionObserver' in window) {

		let lazyImageObserver = new IntersectionObserver(function(entries, observer) {
			entries.forEach(function(entry) {
				if (entry.isIntersecting) {
					let lazyImage = entry.target;
					lazyImage.src = lazyImage.dataset.src;
					lazyImage.srcset = lazyImage.dataset.srcset;
					lazyImage.classList.remove('lazy');
					lazyImageObserver.unobserve(lazyImage);
				}
			});
		});
		lazyImages.forEach(function(lazyImage) {
			lazyImageObserver.observe(lazyImage);
		});

	let lazyBackgroundObserver = new IntersectionObserver(function(entries, observer) {
		entries.forEach(function(entry) {
			if (entry.isIntersecting) {
				entry.target.classList.add('visible');
				lazyBackgroundObserver.unobserve(entry.target);
			}
		});
	});
	lazyBackgrounds.forEach(function(lazyBackground) {
		lazyBackgroundObserver.observe(lazyBackground);
	});

	let lazyBackgroundDataObserver = new IntersectionObserver(function(entries, observer) {
		entries.forEach(function(entry) {
			if (entry.isIntersecting) {
				let lazyBackgroundData = entry.target;
				lazyBackgroundData.style.backgroundImage = 'url(' + lazyBackgroundData.dataset.bg + ')';
				lazyBackgroundDataObserver.unobserve(lazyBackgroundData);
			}
		});
	});
	lazyBackgroundsData.forEach(function(lazyBackgroundData) {
		lazyBackgroundDataObserver.observe(lazyBackgroundData);
	});

	} else {

		// Fallback

		lazyImages.forEach(function(lazyImage) {
			lazyImage.src = lazyImage.dataset.src;
			lazyImage.srcset = lazyImage.dataset.srcset;
		});
		lazyBackgrounds.forEach(function(lazyBackground) {
			lazyBackground.classList.add('visible');
		});
		lazyBackgroundsData.forEach(function(lazyBackgroundData) {
			lazyBackgroundData.style.backgroundImage = 'url(' + lazyBackgroundData.dataset.bg + ')';
		});

	}

});

$(function () {
	svg4everybody();
	// Сортировка по цене mfilter2
	$(document).ready(function () {
		$(document).on('change', '#mse2_sort', function () {
			var selected = $(this).find('option:selected');
			var sort = selected.data('sort');
			sort += mse2Config.method_delimeter + selected.val();
			mse2Config.sort = sort;
			mSearch2.submit();
		});
	});

	document.querySelectorAll('.product-countdown').forEach((item) => {
		if (item.getAttribute('data-countdown') === "1970-01-01") {
			item.remove();
		}
	});

	const ralPopap = document.querySelector('.ral_popAp');
	const overlay = document.querySelector('.overlay');
	let ralPopapTitle = document.createElement('h4');

	function addOverlay() {
		$("body").addClass("fixed");
		$(document).bind('touchmove', false);
		overlay.classList.add('active');
	}

	function removeOverlay() {
		$("body").removeClass("fixed");
		$(document).find('touchmove', true);
		overlay.classList.remove('active');
		ralPopapTitle.remove();
	}

	$(document).keydown(function (eventObject) {
		if (eventObject.which == 27) {
			$('.ral_popAp').removeClass('active');
			removeOverlay();
			$('.hidden_block').removeClass('active');
			$('.main-body').removeClass('active');
			$("body").removeClass("popapOpen");
		}
	});

	overlay.addEventListener('click', () => {
		removeOverlay();
		$('.ral_popAp').removeClass('active');
	});

	document.querySelectorAll('.ral-color_block').forEach((item, index) => {

		item.addEventListener('click', () => {
			ralPopap.classList.add('active');
			addOverlay();
			let ralColor = item.getAttribute('data-color');
			ralPopap.style.backgroundColor = ralColor;

			ralPopapTitle.textContent = item.querySelector('span').innerHTML;

			setTimeout(function () {
				ralPopap.append(ralPopapTitle);
			}, 200);
		});
	});

	$('.popapOpen-callback').click(function () {
		$('.off-canvas-wrapper').removeClass('open');
		$('body').removeClass('fix');
		$('body').addClass('popapOpen');
		$('.hidden_block-callback').addClass('active');
		$('.main-body-form-callback').addClass('active');
	});

	$('.popapOpen-prod_measure').click(function () {
		$('.off-canvas-wrapper').removeClass('open');
		$('body').removeClass('fix');
		$('body').addClass('popapOpen');
		$('.hidden_block-prod_measure').addClass('active');
		$('.main-body-form-prod_measure').addClass('active');
	});

	$('.popapOpen-prod_calculation').click(function () {
		$('.off-canvas-wrapper').removeClass('open');
		$('body').removeClass('fix');
		$('body').addClass('popapOpen');
		$('.hidden_block-prod_calculation').addClass('active');
		$('.main-body-form-prod_calculation').addClass('active');
	});

	$('.popapOpen-prod_consultation').click(function () {
		$('.off-canvas-wrapper').removeClass('open');
		$('body').removeClass('fix');
		$('body').addClass('popapOpen');
		$('.hidden_block-prod_consultation').addClass('active');
		$('.main-body-form-prod_consultation').addClass('active');
	});

	$('.popapOpen-project').click(function () {
		$('.off-canvas-wrapper').removeClass('open');
		$('body').removeClass('fix');
		$('body').addClass('popapOpen');
		$('.hidden_block-project').addClass('active');
		$('.main-body-form-project').addClass('active');
	});

	// $('.config_popap_btn').click(function (e) {
	// 	e.preventDefault();
	// 	$('.off-canvas-wrapper').removeClass('open');
	// 	$('body').removeClass('fix');
	// 	$('body').addClass('popapOpen');
	// 	$('.hidden_block-stairs_config').addClass('active');
	// 	$('.main-body-form-stairs_config').addClass('active');
	// });

	$('.popapOpen-mounting').click(function () {
		$('.off-canvas-wrapper').removeClass('open');
		$('body').removeClass('fix');
		$('body').addClass('popapOpen');
		$('.hidden_block-mounting').addClass('active');
		$('.main-body-form-mounting').addClass('active');
		var priceTitle = $(this).parents('.portfolioi_section_block').find('.section_portfolio_link').html();
		$('.mounting_form .title_input').val(priceTitle);
	});

	$(".price_titles").click(function () {

	});

	let phones = document.querySelectorAll(".phoneClick");
	phones.forEach(item => {
		item.addEventListener("click", () => {
			ym(67166446, 'reachGoal', 'click_phone');
		});
	});
	phones.forEach(item => {
		item.addEventListener("copy", () => {
			ym(67166446, 'reachGoal', 'copy_phone');
		});
	});

	let mails = document.querySelectorAll(".mailClick");
	mails.forEach(item => {
		item.addEventListener("click", () => {
			ym(67166446, 'reachGoal', 'click_mail');
		});
	});
	mails.forEach(item => {
		item.addEventListener("copy", () => {
			ym(67166446, 'reachGoal', 'copy_mail');
		});
	});

	// Табы
	$('.vacansies_tab').hide();

	$('ul.vacansies_tabs__header').on('click', 'li:not(.active)', function () {
		$(this)
			.addClass('active').siblings().removeClass('active')
			.closest('div.vacansies__tabs').find('div.vacansies_tab').removeClass('active').eq($(this).index()).addClass('active');
	});

	// Сортировка по цене mfilter2

	$('.popapClose').click(function () {
		$('body').removeClass('popapOpen');
		$(this).parents('.hidden_block').removeClass('active');
		$('.main-body').removeClass('active');
	});

	$('.button_hide').click(function () {
		$(".button_config_wrapper").css('right', "-300px");
		localStorage.setItem('button_config', 0);
	});

	let buttonLocalKey = localStorage.getItem("button_config");

	if (buttonLocalKey != 0) {
		$(".button_config_wrapper").removeClass('button_config_wrapper_hide');
	}


	// Off Canvas Open close
	$("#shop_filter-button").on('click', function () {
		$("body").addClass('fix');
		$(".shop_filter-wrapper ").addClass('active');
		$(".shop_filter-overlay ").addClass('active');
	});

	$(".shop_filter-overlay, .filter_close").on('click', function () {
		$("body").removeClass('fix');
		$(".shop_filter-wrapper").removeClass('active');
		$(".shop_filter-overlay").removeClass('active');
	});
	$('.about-gallery-slider .potfolio_main-photo:first').addClass('current');
	$('.about-gallery-slider .portfolio_nav-item:first').addClass('current');
	$('.dop-catalog_tab li a.btn:first').addClass('active');
	$('.dop-catalog_standart-tab li a.btn:first').addClass('active');
	$('.dop-catalog_tabs .tab-content .tab-pane:first').addClass('active', 'show');
	$('.dop-catalog_standart_tabs .tab-content .tab-pane:first').addClass('active', 'show');
	$('.portfolio-slider .potfolio_main-photo:first').addClass('current');
	$('.portfolio-slider .portfolio_nav-item:first').addClass('current');

});